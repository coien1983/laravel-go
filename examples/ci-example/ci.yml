# GitHub Actions CI/CD Example for Laravel-Go Framework
# 
# This is an example CI configuration file. To use it:
# 1. Copy this file to .github/workflows/ci.yml
# 2. Customize the configuration as needed
# 3. Commit and push to trigger GitHub Actions

name: Laravel-Go CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20, 1.21, 1.22]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run tests with coverage
      run: go test -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install golint
      run: go install golang.org/x/lint/golint@latest

    - name: Run golint
      run: golint ./...

    - name: Run go vet
      run: go vet ./...

    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted. Please run 'gofmt -s -w .'"
          exit 1
        fi

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build main project
      run: go build -v ./...

    - name: Build examples
      run: |
        echo "Building API Demo..."
        cd examples/api_demo && go build -o api_demo .
        
        echo "Building Microservice Demo..."
        cd ../microservice_demo && go build -o microservice_demo .
        
        echo "Building MCP Service..."
        cd ../../tools/mcp-api-generator && go build -o laravel-go-mcp .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          examples/api_demo/api_demo
          examples/microservice_demo/microservice_demo
          tools/mcp-api-generator/laravel-go-mcp

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install gosec
      run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

    - name: Run security scan
      run: gosec ./...

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: security
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          coien1983/laravel-go:latest
          coien1983/laravel-go:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: docker
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o laravel-go-linux-amd64 ./cmd/artisan
        GOOS=darwin GOARCH=amd64 go build -o laravel-go-darwin-amd64 ./cmd/artisan
        GOOS=windows GOARCH=amd64 go build -o laravel-go-windows-amd64.exe ./cmd/artisan

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          laravel-go-linux-amd64
          laravel-go-darwin-amd64
          laravel-go-windows-amd64.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 