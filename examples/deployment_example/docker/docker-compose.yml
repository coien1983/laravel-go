version: '3.8'

services:
  # Laravel-Go 应用
  laravel-go-app:
    build:
      context: ../..
      dockerfile: examples/deployment_example/docker/Dockerfile
    container_name: laravel-go-app
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=laravel_go
      - DB_USERNAME=laravel_go
      - DB_PASSWORD=laravel_go_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - app_logs:/app/storage/logs
      - app_cache:/app/storage/cache
    networks:
      - laravel-go-network
    restart: unless-stopped

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: laravel-go-postgres
    environment:
      - POSTGRES_DB=laravel_go
      - POSTGRES_USER=laravel_go
      - POSTGRES_PASSWORD=laravel_go_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - laravel-go-network
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: laravel-go-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel-go-network
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: laravel-go-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - laravel-go-app
    networks:
      - laravel-go-network
    restart: unless-stopped

  # 监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: laravel-go-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - laravel-go-network
    restart: unless-stopped

  # Grafana 监控面板
  grafana:
    image: grafana/grafana:latest
    container_name: laravel-go-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - laravel-go-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  app_logs:
  app_cache:
  prometheus_data:
  grafana_data:

networks:
  laravel-go-network:
    driver: bridge 